<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
		http://www.springframework.org/schema/aop
	 	http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd">

	
	<!-- 过滤静态文件的拦截   -->
    <!-- <mvc:default-servlet-handler/> -->
   
	<mvc:annotation-driven>
		<!-- @ResponseBody 使用fastjson转换 -->
		<mvc:message-converters>
			<bean
				class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
				<property name="supportedMediaTypes">
					<list>
						<value>text/plain;charset=UTF-8</value>
						<value>text/html;charset=UTF-8</value>
						<value>application/json; charset=UTF-8</value>
						<value>application/x-www-form-urlencoded; charset=UTF-8</value>
					</list>
				</property>
				<property name="features">
					<array>
						<!-- <value>WriteMapNullValue</value> -->
						<value>WriteDateUseDateFormat</value>

						<!-- 输出key时是否使用双引号 <value>QuoteFieldNames</value> 是否输出值为null的字段 <value>WriteMapNullValue</value> 
							数值字段如果为null,输出为0,而非null <value>WriteNullNumberAsZero</value> List字段如果为null,输出为[],而非null 
							<value>WriteNullListAsEmpty</value> 字符类型字段如果为null,输出为"",而非null <value>WriteNullStringAsEmpty</value> 
							Boolean字段如果为null,输出为false,而非null <value>WriteNullBooleanAsFalse</value> null 
							String不输出 <value>WriteNullStringAsEmpty</value> null String也要输出 <value>WriteMapNullValue</value> 
							Date的日期转换器 <value>WriteDateUseDateFormat</value> -->
					</array>
				</property>
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>
	
	<!-- 静态资源映射 -->
	<mvc:resources mapping="/res/**" location="/res/" />
	
	<!-- 启动扫描Code下所有的controller -->
	<context:component-scan base-package="com.swan.offlineinvoicing"  use-default-filters="false">
			<context:include-filter type="annotation" 
				expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>



	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<bean class="org.springframework.http.converter.StringHttpMessageConverter" />
				<bean class="org.springframework.http.converter.FormHttpMessageConverter" />
			</list>
		</property>
	</bean>
	
	
	<!-- 默认的视图解析器 在上边的解析错误时使用 (默认使用html)- -->
	<bean id="defaultViewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver"
		p:order="1">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
		<property name="contentType" value="text/html" />
		<property name="prefix" value="/" /><!-- 后台platform 商家后台store 静态前台res -->
		<property name="suffix" value=".html" />
	</bean>
    
	<!--配置拦截器, 多个拦截器,顺序执行 -->
	<mvc:interceptors>
		<mvc:interceptor>
			<!-- 匹配的是url路径， 如果不配置或/**,将拦截所有的Controller -->
			<!-- 拦截只拦截servlet存在的,且符合当前规则的 -->
			<mvc:mapping path="/**" />
			<mvc:mapping path="/platform/**" />
			<mvc:mapping path="/store/**" />

			<mvc:exclude-mapping path="/res/**" />
			<mvc:exclude-mapping path="/platform/auth/login" />
			<mvc:exclude-mapping path="/platform/auth/authMenu" />
			<mvc:exclude-mapping path="/platform/auth/logout" />
			<mvc:exclude-mapping path="/platform/auth/userInfo" />
			<mvc:exclude-mapping path="/platform/auth/updatePassword" />
			
			<mvc:exclude-mapping path="/store/auth/login" />
			<mvc:exclude-mapping path="/store/auth/authMenu" />
			<mvc:exclude-mapping path="/store/auth/logout" />
			<mvc:exclude-mapping path="/store/auth/userInfo" />
			<mvc:exclude-mapping path="/store/auth/updatePassword" />
			
			<mvc:exclude-mapping path="/upload" />
			<mvc:exclude-mapping path="/geturl/*" />
			<mvc:exclude-mapping path="/getFile/*" />
			
			<bean class="com.swan.offlineinvoicing.auth.interceptor.AuthorizationInterceptor"></bean>
		</mvc:interceptor>
		<!-- 当设置多个拦截器时，先按顺序调用preHandle方法，然后逆序调用每个拦截器的postHandle和afterCompletion方法 -->
	</mvc:interceptors>

</beans>
